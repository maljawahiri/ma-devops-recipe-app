name: Test and Lint
on:
  workflow_call:
    secrets:
      DOCKERHUB_USER:
        required: true
      DOCKERHUB_TOKEN:
        required: true

jobs:

  # Runs ONLY on regular GitHub (Ubuntu Runner)
  python-ubuntu:
    name: Python ubuntu-22.04
    runs-on: ubuntu-22.04
    if: ${{ github.server_url == 'https://github.com' }}  # Directly check server URL
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Python test and lint placeholder
        run: echo "Python test and lint placeholder"
      # - name: Test
      #   run: docker compose run --rm app sh -c "python manage.py wait_for_db && python manage.py test"
      # - name: Lint
      #   run: docker compose run --rm app sh -c "flake8"

  terraform-ubuntu:
    name: Terraform ubuntu-22.04
    runs-on: ubuntu-22.04
    if: ${{ github.server_url == 'https://github.com' }}  # Directly check server URL
    steps:
      - name: Terraform lint placeholder
        run: echo "Terraform lint placeholder"
      # - name: Checkout
      #   uses: actions/checkout@v4
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USER }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      # - name: Terraform lint
      #   run: |
      #     cd infra/
      #     docker compose run --rm terraform -chdir=deploy/ init -backend=false
      #     docker compose run --rm terraform -chdir=setup/ init -backend=false
      #     docker compose run --rm terraform -chdir=setup/ validate
      #     docker compose run --rm terraform -chdir=setup/ fmt -check
      #     docker compose run --rm terraform -chdir=deploy/ validate
      #     docker compose run --rm terraform -chdir=deploy/ fmt -check

  # Runs ONLY on GitHub Enterprise (Self-Hosted Windows Runner)
  windows-assume-role:
    name: Windows assume role
    runs-on: [self-hosted, Windows]
    if: ${{ github.server_url != 'https://github.com' }}  # Directly check server URL
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Assume role
        # shell: pwsh
        run: ./bin/assume_terraform_role.ps1 ma-recipe-app-terraform-role

  python-windows:
    name: Python Windows
    needs: [windows-assume-role]
    runs-on: [self-hosted, Windows]
    if: ${{ github.server_url != 'https://github.com' }}  # Directly check server URL
    continue-on-error: true
    steps:
      - name: Checkout Docker login action
        run: |
          if (-Not (Test-Path "../docker-login-action")) {
              git clone https://github.com/docker/login-action.git ../docker-login-action
          }
      - name: Login to Docker Hub
        uses: ./../docker-login-action
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Test
        run: docker compose run --rm app sh -c "python manage.py wait_for_db && python manage.py test"
      - name: Lint
        run: docker compose run --rm app sh -c "flake8"

  terraform-windows:
    name: Terraform Windows
    needs: [windows-assume-role]
    runs-on: [self-hosted, Windows]
    if: ${{ github.server_url != 'https://github.com' }}  # Directly check server URL
    continue-on-error: true
    steps:
      - name: Login to Docker Hub
        uses: ./../docker-login-action
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Terraform lint
        run: |          
          cd infra
          docker compose run --rm terraform -chdir=deploy init -backend=false
          docker compose run --rm terraform -chdir=setup init -backend=false
          docker compose run --rm terraform -chdir=setup validate
          docker compose run --rm terraform -chdir=setup fmt -check
          docker compose run --rm terraform -chdir=deploy validate
          docker compose run --rm terraform -chdir=deploy fmt -check

  # Final Status Check
  test-and-lint-final-status:
    needs: [python-ubuntu, python-windows, terraform-ubuntu, terraform-windows]
    runs-on: ${{ (github.server_url == 'https://github.com' && 'ubuntu-22.04') || 'self-hosted' }}
    if: always()
    steps:
      - name: Determine Workflow Status
        # shell: pwsh
        run: |
          Write-Output "Evaluating job results..."
          # Initialize overall result as success
          $OVERALL_RESULT = "success"

          # Check if python-ubuntu job ran and its result
          if ("${{ needs.python-ubuntu.result }}" -eq "failure") {
            Write-Output "python-ubuntu failed."
            $OVERALL_RESULT = "failure"
          }

          # Check if python-windows job ran and its result
          if ("${{ needs.python-windows.result }}" -eq "failure") {
            Write-Output "python-windows failed."
            $OVERALL_RESULT = "failure"
          }

          # Check if terraform-ubuntu job ran and its result
          if ("${{ needs.terraform-ubuntu.result }}" -eq "failure") {
            Write-Output "terraform-ubuntu failed."
            $OVERALL_RESULT = "failure"
          }

          # Check if terraform-windows job ran and its result
          if ("${{ needs.terraform-windows.result }}" -eq "failure") {
            Write-Output "terraform-windows failed."
            $OVERALL_RESULT = "failure"
          }

          Write-Output "Overall result: $OVERALL_RESULT"
          if ($OVERALL_RESULT -eq "success") {
            exit 0
          } else {
            exit 1
          }
